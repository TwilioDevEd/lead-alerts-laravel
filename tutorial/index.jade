.chapter(data-title='Setting Up The Application')
  .step(
      data-title='What Are We Building?',
      data-file='app/Providers/TwilioServiceProvider.php')
    :markdown
      ## What Are We Building?

      You probably already have landing pages or product detail views you're
      using to generate leads for your business on your web application.
      On this tutorial we'll use Twilio SMS to send a message when a new lead
      is found.

      ![Lead Alerts Flow](//s3.amazonaws.com/howtodocs/lead-alerts-flow.png)

      In this example we'll be implementing instant lead alerts for real estate
      (much like [our awesome friends at
      Trulia](//www.twilio.com/customers/stories/trulia)). We'll create a
      landing page for a new house on the market, and notify a real estate agent
      the moment a potential customer requests information.

      Let's see how it works! Click the next arrow above to continue the tutorial.

  .step(
    data-title='Landing Page Data',
    data-file='app/Http/Controllers/HomeController.php')
    :markdown
      ## Landing Page Data

      To display a landing page for our house, we'll first need some data about
      the fictional house we've put on the market. For demonstration purposes,
      we've hard-coded an _associative array_ containing the information we need.

      ---

      **See Also:**
      * [Laravel Basic Controllers](//laravel.com/docs/5.1/controllers#basic-controllers)
      * [PHP Array](//php.net/manual/en/language.types.array.php)

  .step(data-title='Rendering the Landing Page',
    data-file='resources/views/home/index.blade.php')
    :markdown
      ## Rendering the Landing Page

      In our _blade template_ we'll insert data about the house and in a sidebar
      we include a form for the user. Here they enter their contact information and
      request more info about the property.

      ---

      **See Also:**
      * [Blade Templates](//laravel.com/docs/5.1/blade)

  .step(
    data-title='Creating a Twilio API Client',
    data-file='app/Providers/TwilioServiceProvider.php',
    data-highlight='15-22')
    :markdown
      ## Creating a Twilio REST API Client

      Here we create a helper class with an authenticated [Twilio REST
      API](https://twilio.github.io/twilio-php/class-Twilio.Rest.Client.html) client that we can use anytime we need to send a text message. We
      initialize it with our [Twilio Account Credentials](//www.twilio.com/user/account/messaging/dashboard)
      stored as environment variables.

      ---

      **See Also:**
      * [Twilio SMS and MMS Quickstart](//www.twilio.com/docs/quickstart/php/sms/sending-via-rest)
      * [Laravel Service Providers](https://laravel.com/docs/5.2/providers)

  .step(
    data-title='Handling the POST Request',
    data-file='app/Http/Controllers/NotificationsController.php',
    data-highlight='21-54')
    :markdown
      ## Handling the POST Request

      This code handles the HTTP `POST` request issued by our landing page. It
      uses our `sendMessage` helper method to send an SMS message to the real estate
      agent's phone number, which is also set as a environment variable. We
      include the lead's name, phone number, and inquiry directly into the body of
      the text message we send to the agent.

      Now the agent has all the information he/she needs to immediately follow up on the lead.

  .step
    :markdown
      ## Where to next?

      That's it! We've just implemented an application to instantly route leads
      to sales people using text messages. If you're a
      PHP developer working with Twilio, you might want to check these
      other tutorials out.

      [**Browser Calls**](//www.twilio.com/docs/tutorials/walkthrough/browser-calls/php/laravel)

      Twilio Client allows your users to make and receive phone calls in their
      web browsers.

      [**Call Tracking**](//www.twilio.com/docs/tutorials/walkthrough/call-tracking/php/laravel)

      Call Tracking helps you measure the effectiveness of marketing campaigns.

      ### Did this help?

      Thanks for checking out this tutorial! If you have any feedback
      to share with us, we'd love to hear it.
      [Contact the Twilio Developer Education Team](mailto:deved-oss@twilio.com) to let us know what you think.
